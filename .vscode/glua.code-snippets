{
	// Place your photon_v2 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
		"New Angle": {
			"prefix": ["ang"],
			"body": ["Angle( 0, 0, 0 )"]
		},
		"New Vector": {
			"prefix": ["vec"],
			"body": ["Vector( 0, 0, 0 )"]
		},
		"Sequence Builder": {
			"prefix": ["local sequence = local sequence = Photon2.SequenceBuilder.New"],
			"body": ["local sequence = Photon2.SequenceBuilder.New"]
		},
		"New Segment": {
			"prefix": ["/segment"],
			"body": ["${1:All} = {", 
						"\tFrames = {", 
							"\t\t[1] = \"\",", 
						"\t},", 
						"\tSequences = {",
							"\t\t[\"${2:ON}\"] = { 1 }," ,
						"\t}", 
					"}"]
		},
		"New Input Channel": {
			"prefix": ["/channel"],
			"body": ["[\"${1:Channel}\"] = {",
						"\t${2:MODE} = {",
							"\t\t${3:Segment} = \"${4:SEQUENCE}\"",
						"\t}"
					"},"]
		},
},
